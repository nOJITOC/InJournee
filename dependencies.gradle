ext {
    addDependencies = { handler, depend ->
        depend.each { dependency ->
            def properties = dependency.properties
            handler.dependencies {
                add(properties['configuration'], properties['dependency'])
            }
        }
    }
    retrofit = '2.6.2'
    daggerPath = 'com.google.dagger:dagger:2.31.2'
    coroutinesCorePath = 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    archVersion = '2.3.0'


    lifecycle = [
            implementation("androidx.lifecycle:lifecycle-extensions:$archVersion"),
            implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$archVersion"),
            implementation("androidx.lifecycle:lifecycle-runtime-ktx:$archVersion")
    ]

    dagger = [
            implementation(daggerPath),
            kapt('com.google.dagger:dagger-compiler:2.24')
    ]

    rest = [
            implementation("com.squareup.retrofit2:converter-moshi:$retrofit"),
            implementation("com.squareup.retrofit2:retrofit:$retrofit")
    ]

    uiMap = [
            appcompat: 'androidx.appcompat:appcompat:1.2.0',
            material : 'com.google.android.material:material:1.3.0'
    ]

    map = [
            implementation('com.google.maps.android:android-maps-utils:2.0.3'),
            implementation('com.google.maps.android:maps-utils-ktx:2.1.3')
    ]

    coroutines = [
            implementation(coroutinesCorePath),
            implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.0')
    ]

    ui = new ArrayList<Dependency>()
    uiMap.values().each {
        ui.add(implementation(it))
    }
}

private static def implementation(String dependency) {
    return new Dependency('implementation', dependency)
}

private static def kapt(String dependency) {
    return new Dependency('kapt', dependency)
}

class Dependency {
    String configuration
    String dependency

    Dependency(String configuration, String dependency) {
        setConfiguration(configuration)
        setDependency(dependency)
    }
}